# Get the current directory
mac_mkfile_path := $(abspath $(lastword $(MAKEFILE_LIST)))
$(info $$mac_mkfile_path is [${mac_mkfile_path}])
mac_current_dir := $(notdir $(patsubst %/,%,$(dir $(mac_mkfile_path))))
$(info $$mac_current_dir is [${mac_current_dir}])

# Flags
CFLAGS += -I$(mac_current_dir)/include -I$(mac_current_dir)/include/testsinclude
ifdef DEBUG
	CFLAGS += -g
endif
CPPFLAGS += -D__LINUX__

MKDIR_OBJ_MAC = mkdir -p $(mac_current_dir)/obj
MKDIR_LIB_MAC = mkdir -p $(mac_current_dir)/lib

LIB_MAC = $(mac_current_dir)/lib

# include directories
INC_DIR = $(mac_current_dir)/include
$(info $$INC_DIR is [${INC_DIR}])
ifdef TEST
INCT_DIR = $(INC_DIR)/testsinclude
$(info $$INCT_DIR is [${INCT_DIR}])
endif

# source directories
#include sources from utils
SRC_DIR = $(mac_current_dir)
$(info $$SRC_DIR is [${SRC_DIR}])
ifdef TEST
SRCT_DIR = $(mac_current_dir)/srcs_test
$(info $$SRCT_DIR is [${SRCT_DIR}])
endif

# Source files
SRC = $(mac_current_dir)/CFPacket.c $(mac_current_dir)/ControlPacket.c $(mac_current_dir)/DataPacket.c
$(info $$SRC is [${SRC}])
ifdef TEST
SRCT += $(SRCT_DIR)/mclmac_tests.c $(SRCT_DIR)/CFPacket_Tests.c $(SRCT_DIR)/ControlPacket_Tests.c $(SRCT_DIR)/DataPacket_Tests.c
$(info $$SRCT is [${SRCT}])
endif

# Dependencies
DEPS = $(INC_UTILS)/memory.h $(INC_DIR)/CFPacket.h $(INC_DIR)/ControlPacket.h $(INC_DIR)/DataPacket.h
ifdef TEST
DEPST = $(INCT_DIR)/mclmac_tests.h $(INCT_DIR)/CFPacket_Tests.h $(INCT_DIR)/CFPacket_Tests.h $(INCT_DIR)/DataPacket_Tests.h
endif
$(info $$DEPS is [${DEPS}])

# Objects
OBJ_DIR = $(mac_current_dir)/obj
$(info $$OBJ_DIR is ${OBJ_DIR})
ifdef TEST
OBJT_DIR = $(mac_current_dir)/obj
$(info $$OBJT_DIR is ${OBJT_DIR})
endif

OBJS = $(OBJ_DIR)/CFPacket.o $(OBJ_DIR)/ControlPacket.o $(OBJ_DIR)/DataPacket.o
$(info $$OBJS is ${OBJS})
ifdef TEST
OBJST = $(OBJT_DIR)/mclmac_tests.o $(OBJT_DIR)/CFPacket_Tests.o $(OBJT_DIR)/ControlPacket_Tests.o $(OBJT_DIR)/DataPacket_Tests.o
$(info $$OBJST is ${OBJST})
endif

TARGETS := directories $(LIB_MAC)/libmclmac
ifdef TEST
TARGETS += $(LIB_MAC)/libmclmacT
endif
$(info $$TARGETS is [${TARGETS}])

all: $(TARGETS)

directories:
	$(MKDIR_OBJ_MAC)
	$(MKDIR_LIB_MAC)

# Create a static library for the current module
$(LIB_MAC)/libmclmac: $(OBJS)
	$(AR) $@.a $^
	$(RL) $@.a

ifdef TEST
$(LIB_MAC)/libmclmacT: $(OBJST)
	$(AR) $@.a $^
	$(RL) $@.a
endif

$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c
	$(CC) $(CFLAGS) $(CPPFLAGS) -c $< -o $@

$(OBJ_DIR)/%.o: $(current_dir)/utils/include/%.h $(INC_DIR)/%.h

ifdef TEST
$(OBJT_DIR)/%.o: $(SRCT_DIR)/%.c
	$(CC) $(CFLAGS) $(CPPFLAGS) -c $< -o $@

$(OBJT_DIR)/%.o: $(INCT_DIR)/%.h
endif
