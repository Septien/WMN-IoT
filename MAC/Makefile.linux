# Get the current directory
mac_mkfile_path := $(abspath $(lastword $(MAKEFILE_LIST)))
$(info $$mac_mkfile_path is [${mac_mkfile_path}])
mac_current_dir := $(notdir $(patsubst %/,%,$(dir $(mac_mkfile_path))))
$(info $$mac_current_dir is [${mac_current_dir}])

# include directories
INC_MAC := $(mac_current_dir)/include
# Flags
CFLAGS += -I$(INC_MAC)

OBJ_DIR := $(BIN)/mac
SRC_DIR := $(mac_current_dir)
MKDIR_MAC := mkdir -p $(OBJ_DIR)

# Dependencies
DEPSA := CFPacket.h ControlPacket.h DataPacket.h MAC_Internals.h MCLMAC.h config_mac.h
DEPS := $(INC_UTILS)/memory_macros.h
DEPS += $(addprefix $(INC_DIR)/, $(DEPSA))

OBJA := CFPacket.o ControlPacket.o DataPacket.o MAC_Internals.o MCLMAC.o MAC_PowerMode_StateMachine.o
OBJA += Packets_Handlers.o MAC_StateMachine.o
OBJS := $(addprefix $(OBJ_DIR)/, $(OBJA))

TARGETS := directories_mac $(LIB)/libmclmac
$(info $$TARGETS is $(TARGETS))

all : $(TARGETS)

directories_mac :
	$(MKDIR_MAC)

# Create a static library for the current module
$(LIB)/libmclmac: $(OBJS)
	$(AR) $@.a $^
	$(RL) $@.a

$(OBJ_DIR)/%.o: $(SRC_DIR)/%.c
	$(CC) $(CFLAGS) $(CPPFLAGS) -c $< -o $@

$(OBJ_DIR)/%.o: $(current_dir)/utils/include/%.h $(INC_DIR)/%.h $(GLOBAL_DEP)
